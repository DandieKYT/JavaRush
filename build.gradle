plugins {
    id 'java-library'
    id 'java'
    id ('io.qameta.allure') version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

group 'quru.qa'
version '1.0-SNAPSHOT'

allure{
    report {
        version.set("2.21.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.21.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}





repositories {
    mavenCentral()
    compileJava {
        options.encoding = 'UTF-8'
    }
}

compileTestJava{
    options.encoding='UTF-8'
}

def
        webDriverManagerVersion = "5.0.3",
        allureJunitVersion = "2.18.1",
        assertjCoreVersion = "3.23.1",
        restAssuredVersion = "5.3.2",
        slf4jSimpleVersion = "2.0.7",
        commonsIoVersion = "2.11.0",
        javaFakerVersion = "1.0.2",
        selenideVersion = "6.13.0",
        jacksonVersion = "2.14.2",
        lombokVersion = "1.18.22",
        allureVersion = "2.21.0",
        appiumVersion = "8.4.0",
        ownerVersion = "1.0.4",
        junitVersion = "5.8.2",
        restAssured = "4.5.1"

dependencies {
    testImplementation (
            "io.github.bonigarcia:webdrivermanager:$webDriverManagerVersion",
            "io.rest-assured:json-schema-validator:5.3.2",
            "io.qameta.allure:allure-rest-assured:2.21.0",
            "io.qameta.allure:allure-junit5:2.18.1",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:4.5.1",
            "io.appium:java-client:$appiumVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion",
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.assertj:assertj-core:$assertjCoreVersion",
            "org.slf4j:slf4j-simple:$slf4jSimpleVersion",
            "org.projectlombok:lombok:$lombokVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "commons-io:commons-io:$commonsIoVersion"
    )
    implementation("io.github.bonigarcia:webdrivermanager:$webDriverManagerVersion",
            "io.rest-assured:json-schema-validator:5.3.2",
            "io.qameta.allure:allure-rest-assured:2.21.0",
            "io.qameta.allure:allure-junit5:2.18.1",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:4.5.1",
            "io.appium:java-client:$appiumVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion",
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.assertj:assertj-core:$assertjCoreVersion",
            "org.slf4j:slf4j-simple:$slf4jSimpleVersion",
            "org.projectlombok:lombok:$lombokVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "commons-io:commons-io:$commonsIoVersion")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {//благодаря этой строчке передаются параметры в скрипт сборки
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    systemProperty "chromeoptions.prefs", "init.accept_languages=ru"
    useJUnitPlatform()
}

task UITest(type: Test) {
    useJUnitPlatform {
        includeTags "UITest"
        maxParallelForks = 25
    }
}
task Mobile(type: Test) {
    useJUnitPlatform {
        includeTags "Mobile"
    }
}
task API(type: Test) {
    useJUnitPlatform {
        includeTags "API"
    }
}


